package com.santi.recetarium.entity;
// Generated 13 abr. 2021 11:28:27 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Recipes generated by hbm2java
 */
@Entity
@Table(name = "recipes")
public class Recipes implements java.io.Serializable {

	private long idRecipe;
	private Ingredients ingredients;
	private String recipeName;
	private String dificulty;
	private String timeRequired;
	private String description;
	private String instructions;
	private Set recipeIngredients = new HashSet(0);

	public Recipes() {
	}

	public Recipes(Ingredients ingredients, String recipeName, String instructions) {
		this.ingredients = ingredients;
		this.recipeName = recipeName;
		this.instructions = instructions;
	}

	public Recipes(Ingredients ingredients, String recipeName, String dificulty, String timeRequired,
			String description, String instructions, Set recipeIngredients) {
		this.ingredients = ingredients;
		this.recipeName = recipeName;
		this.dificulty = dificulty;
		this.timeRequired = timeRequired;
		this.description = description;
		this.instructions = instructions;
		this.recipeIngredients = recipeIngredients;
	}

	@GenericGenerator(name = "com.santi.recetarium.entity.RecipesIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "ingredients"))
	@Id
	@GeneratedValue(generator = "com.santi.recetarium.entity.RecipesIdGenerator")

	@Column(name = "id_recipe", unique = true, nullable = false)
	public long getIdRecipe() {
		return this.idRecipe;
	}

	public void setIdRecipe(long idRecipe) {
		this.idRecipe = idRecipe;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Ingredients getIngredients() {
		return this.ingredients;
	}

	public void setIngredients(Ingredients ingredients) {
		this.ingredients = ingredients;
	}

	@Column(name = "recipe_name", nullable = false)
	public String getRecipeName() {
		return this.recipeName;
	}

	public void setRecipeName(String recipeName) {
		this.recipeName = recipeName;
	}

	@Column(name = "dificulty")
	public String getDificulty() {
		return this.dificulty;
	}

	public void setDificulty(String dificulty) {
		this.dificulty = dificulty;
	}

	@Column(name = "time_required")
	public String getTimeRequired() {
		return this.timeRequired;
	}

	public void setTimeRequired(String timeRequired) {
		this.timeRequired = timeRequired;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "instructions", nullable = false)
	public String getInstructions() {
		return this.instructions;
	}

	public void setInstructions(String instructions) {
		this.instructions = instructions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recipes")
	public Set getRecipeIngredients() {
		return this.recipeIngredients;
	}

	public void setRecipeIngredients(Set recipeIngredients) {
		this.recipeIngredients = recipeIngredients;
	}

}
